{"version":3,"sources":["react/index.js","react-dom/index.js","index.js"],"names":["React","createElement","tag","attrs","childrens","ReactDom","render","vnode","container","console","log","undefined","textNode","document","createTextNode","appendChild","dom","Object","keys","forEach","key","value","setAttribute","child","test","toLowerCase","style","cssText","k","removeAttribute","ele","querySelector"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const React = {\r\n  createElement,\r\n};\r\n\r\nfunction createElement(tag, attrs, ...childrens) {\r\n  return {\r\n    tag, // 外层的标签\r\n    attrs, // 属性 是一个对象\r\n    childrens, // 是一个数组\r\n  };\r\n}\r\n\r\nexport default React;\r\n","const ReactDom = {\r\n  render,\r\n};\r\n\r\nfunction render(vnode, container) {\r\n  console.log(vnode);\r\n  if (vnode === undefined) return;\r\n\r\n  // 如果vnode是字符串\r\n  if (typeof vnode === 'string') {\r\n    // 创建文本节点\r\n    const textNode = document.createTextNode(vnode);\r\n    return container.appendChild(textNode);\r\n  }\r\n\r\n  // 否则就是虚拟dom对象\r\n  const { tag, attrs, childrens } = vnode;\r\n  // 创建节点对象\r\n  const dom = document.createElement(tag);\r\n\r\n  if (attrs) {\r\n    // 有属性 key; className='active' tile='123'\r\n    Object.keys(attrs).forEach((key) => {\r\n      const value = attrs[key];\r\n      setAttribute(dom, key, value);\r\n    });\r\n  }\r\n\r\n  // 渲染子节点\r\n  childrens.forEach((child) => render(child, dom));\r\n\r\n  return container.appendChild(dom);\r\n}\r\n\r\nfunction setAttribute(dom, key, value) {\r\n  // 将属性名className转换成class\r\n  if (key === 'className') {\r\n    key = 'class';\r\n  }\r\n\r\n  // 如果是事件 onClick onBlur...\r\n  if (/on\\w+/.test(key)) {\r\n    // 转小写\r\n    key.toLowerCase();\r\n    dom[key] = value || '';\r\n  } else if (key === 'style') {\r\n    if (!value || typeof value === 'string') {\r\n      dom.style.cssText = value || '';\r\n    } else if (value && typeof value === 'object') {\r\n      // {width: 20}\r\n      for (let k in value) {\r\n        if (typeof value[k] === 'number') {\r\n          dom.style[k] = value[k] + 'px';\r\n        } else {\r\n          dom.style[k] = value[k];\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // 其它属性\r\n    if (key in dom) {\r\n      dom[key] = value || '';\r\n    }\r\n    if (value) {\r\n      // 更新值\r\n      dom.setAttribute(key, value);\r\n    } else {\r\n      dom.removeAttribute(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDom;\r\n","import React from './react';\r\nimport ReactDom from './react-dom';\r\n\r\nconst ele = (\r\n  <div className=\"active\" title=\"123\">\r\n    hello, <span>react</span>\r\n  </div>\r\n);\r\nReactDom.render(ele, document.querySelector('#root'));\r\n\r\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\r\n//     className: \"active\",\r\n//     title: \"123\"\r\n// }, \"hello, \", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));\r\n"]}